import os
import re
import time
from typing import Optional

from gigachat import GigaChat
from gigachat.models import Chat, Messages, MessagesRole
from app.storage import load_user_data, save_user_data

GIGACHAT_MODEL: str = os.getenv("GIGACHAT_MODEL", "GigaChat-2-Max").strip()
GIGACHAT_TEMPERATURE: float = float(os.getenv("GIGACHAT_TEMPERATURE", "0.2"))
GIGACHAT_MAX_TOKENS: int = int(os.getenv("GIGACHAT_MAX_TOKENS", "2000"))
GIGACHAT_TIMEOUT: int = int(os.getenv("GIGACHAT_TIMEOUT", "60"))
GIGACHAT_RETRIES: int = int(os.getenv("GIGACHAT_RETRIES", "3"))

_RPE_PATTERNS = [
    r"\(?\s*RPE\s*=?\s*\d+(?:\s*-\s*\d+)?\s*\)?",
    r"\(?\s*RIR\s*=?\s*\d+(?:\s*-\s*\d+)?\s*\)?",
    r"\b–¥–æ\s+–æ—Ç–∫–∞–∑–∞\b",
    r"\b–ø–æ—á—Ç–∏\s+–¥–æ\s+–æ—Ç–∫–∞–∑–∞\b",
]

def _strip_rpe(text: str) -> str:
    """–£–±–∏—Ä–∞–µ–º RPE/RIR/¬´–¥–æ –æ—Ç–∫–∞–∑–∞¬ª –∏ –ø—Ä–∏–≤–æ–¥–∏–º —Ñ–æ—Ä–º–∞—Ç, –Ω–µ –ª–æ–º–∞—è –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫."""
    out = text
    for p in _RPE_PATTERNS:
        out = re.sub(p, "", out, flags=re.IGNORECASE)

    out = re.sub(r"^\s*‚Ä¢\s+", "- ", out, flags=re.MULTILINE)

    out = re.sub(r"(\d)\s*[xX\*]\s*(\d)", r"\1√ó\2", out)

    out = re.sub(r"\(\s*\)", "", out)
    out = re.sub(r",\s*,", ", ", out)

    out = re.sub(r"[ \t]{2,}", " ", out)
    out = re.sub(r"[ \t]+\n", "\n", out)
    out = re.sub(r"\n[ \t]+", "\n", out)

    out = re.sub(r"\n{3,}", "\n\n", out)

    return out.strip()


class FitnessAgent:
    def __init__(self, token: str, user_id: str):
        self.token = token
        self.user_id = user_id
        self.user_data = load_user_data(user_id)

        physical_data = self.user_data.get("physical_data", {}) or {}
        self._user_name: Optional[str] = (physical_data.get("name") or "").strip() or None

        physical_prompt = self._format_physical_data(physical_data)

        self.payload = Chat(
            messages=[
                Messages(
                    role=MessagesRole.SYSTEM,
                    content=(
                        "–¢—ã ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä –ø–æ –±–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥—É –≤ —Ç—Ä–µ–Ω–∞–∂—ë—Ä–Ω–æ–º –∑–∞–ª–µ —Å –æ–ø—ã—Ç–æ–º 8+ –ª–µ—Ç. "
                        "–ü–∏—à–∏ —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown, –±–µ–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π –∏ –ø—Ä–æ—â–∞–Ω–∏–π. "
                        "–í—ã—Ö–æ–¥ ‚Äî —Ç–æ–ª—å–∫–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞.\n\n"
                        "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é:\n"
                        "‚Ä¢ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π –º–µ–∂–¥—É –¥–Ω—è–º–∏.\n"
                        "‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–Ω—è: **–î–µ–Ω—å N** (–∏–ª–∏ **–î–µ–Ω—å N ‚Äî —á–∞—Å—Ç—å —Ç–µ–ª–∞**).\n"
                        "‚Ä¢ –í –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è –¥–æ–±–∞–≤—å –∫–æ—Ä–æ—Ç–∫—É—é —Ä–∞–∑–º–∏–Ω–∫—É (5‚Äì7 –º–∏–Ω—É—Ç) –∏ –≤ –∫–æ–Ω—Ü–µ –∑–∞–º–∏–Ω–∫—É/—Ä–∞—Å—Ç—è–∂–∫—É (3‚Äì5 –º–∏–Ω—É—Ç).\n"
                        "‚Ä¢ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è ‚Äî –º–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫, –Ω–∞ —Å—Ç—Ä–æ–∫—É –æ–¥–Ω–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ:\n"
                        "  - ¬´–ù–∞–∑–≤–∞–Ω–∏–µ ‚Äî 3√ó12, –æ—Ç–¥—ã—Ö 90 —Å–µ–∫.¬ª (–∑–Ω–∞–∫ √ó; —Ç–∏—Ä–µ ¬´‚Äî¬ª –º–µ–∂–¥—É –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ —Å–µ—Ç–∫–æ–π).\n"
                        "‚Ä¢ –í –∫–æ–Ω—Ü–µ –ø–ª–∞–Ω–∞ –¥–æ–±–∞–≤—å –∫–æ—Ä–æ—Ç–∫–∏–π –±–ª–æ–∫ **–ó–∞–º–µ—Ç–∫–∏ –ø–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏** (–∫–∞–∫ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –≤–µ—Å/–ø–æ–≤—Ç–æ—Ä—ã).\n\n"
                        "–°–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–∞—è —á–∞—Å—Ç—å:\n"
                        "‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–π –ø–æ–¥—Ö–æ–¥—ã √ó –ø–æ–≤—Ç–æ—Ä—ã –∏ –æ—Ç–¥—ã—Ö –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.\n"
                        "‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π —Ç–µ—Ä–º–∏–Ω—ã RPE/RIR –∏ —Ñ—Ä–∞–∑—ã ¬´–¥–æ –æ—Ç–∫–∞–∑–∞¬ª. "
                        "  –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ä–∏–µ–Ω—Ç–∏—Ä —É—Å–∏–ª–∏–π ‚Äî –ø–∏—à–∏ —Å–ª–æ–≤–∞–º–∏: ¬´–ª—ë–≥–∫–æ¬ª, ¬´—É–º–µ—Ä–µ–Ω–Ω–æ¬ª, ¬´—Ç—è–∂–µ–ª–æ¬ª.\n"
                        "‚Ä¢ –°—Ç—Ä–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—É –±–µ–∑ —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "
                        "(—Ü–µ–ª—å, –ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç, —Ä–æ—Å—Ç, –≤–µ—Å, –∂–µ–ª–∞–µ–º—ã–π –≤–µ—Å, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, —á–∞—Å—Ç–æ—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, —É—Ä–æ–≤–µ–Ω—å).\n"
                        "‚Ä¢ –£—á–∏—Ç—ã–≤–∞–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è/–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ–µ —á–∏—Å–ª–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é.\n"
                        "‚Ä¢ –ï—Å–ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –¥–Ω–µ–π –º–µ–Ω—å—à–µ 3, –æ–±—ä–µ–¥–∏–Ω—è–π –≥—Ä—É–ø–ø—ã –º—ã—à—Ü —Ä–∞–∑—É–º–Ω–æ; –µ—Å–ª–∏ 4+ ‚Äî —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–π —Å–ø–ª–∏—Ç–æ–º.\n\n"
                        "–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ (–æ–±—Ä–∞–∑–µ—Ü —Ä–∞–∑–º–µ—Ç–∫–∏, –Ω–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ):\n"
                        "**–î–µ–Ω—å 1 ‚Äî –í–µ—Ä—Ö —Ç–µ–ª–∞**\n"
                        "- –ñ–∏–º —à—Ç–∞–Ω–≥–∏ –ª—ë–∂–∞ ‚Äî 4√ó8‚Äì10, –æ—Ç–¥—ã—Ö 90 —Å–µ–∫., —É—Å–∏–ª–∏–µ: —É–º–µ—Ä–µ–Ω–Ω–æ-—Ç—è–∂–µ–ª–æ\n"
                        "- –¢—è–≥–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫–∞ ‚Äî 3√ó10‚Äì12, –æ—Ç–¥—ã—Ö 75 —Å–µ–∫., —É—Å–∏–ª–∏–µ: —É–º–µ—Ä–µ–Ω–Ω–æ\n"
                        "- –ü–æ–¥—ä—ë–º—ã –Ω–∞ –±–∏—Ü–µ–ø—Å ‚Äî 3√ó12‚Äì15, –æ—Ç–¥—ã—Ö 60 —Å–µ–∫., —É—Å–∏–ª–∏–µ: —É–º–µ—Ä–µ–Ω–Ω–æ\n"
                        "\n"
                        "**–î–µ–Ω—å 2 ‚Äî –ù–æ–≥–∏/—è–≥–æ–¥–∏—Ü—ã**\n"
                        "- –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è ‚Äî 4√ó6‚Äì8, –æ—Ç–¥—ã—Ö 120 —Å–µ–∫., —É—Å–∏–ª–∏–µ: —Ç—è–∂–µ–ª–æ\n"
                        "- –†—É–º—ã–Ω—Å–∫–∞—è —Ç—è–≥–∞ ‚Äî 3√ó8‚Äì10, –æ—Ç–¥—ã—Ö 90 —Å–µ–∫., —É—Å–∏–ª–∏–µ: —É–º–µ—Ä–µ–Ω–Ω–æ-—Ç—è–∂–µ–ª–æ\n"
                        "\n"
                        "**–ó–∞–º–µ—Ç–∫–∏ –ø–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏**\n"
                        "- –ï—Å–ª–∏ –≤—Å–µ –ø–æ–¥—Ö–æ–¥—ã –¥–∞—é—Ç—Å—è –ª–µ–≥–∫–æ ‚Äî –¥–æ–±–∞–≤–ª—è–π +2‚Äì2.5 –∫–≥ –∏–ª–∏ +1‚Äì2 –ø–æ–≤—Ç–æ—Ä–∞ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑.\n"
                    ),
                ),
                Messages(role=MessagesRole.USER, content=physical_prompt),
            ],
            temperature=GIGACHAT_TEMPERATURE,
            max_tokens=GIGACHAT_MAX_TOKENS,
            model=GIGACHAT_MODEL,
        )

    def _format_physical_data(self, data: dict) -> str:
        return (
            f"–¶–µ–ª—å: {data.get('target', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
            f"–ü–æ–ª: {data.get('gender', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"–í–æ–∑—Ä–∞—Å—Ç: {data.get('age', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')} –ª–µ—Ç\n"
            f"–†–æ—Å—Ç: {data.get('height', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')} —Å–º\n"
            f"–¢–µ–∫—É—â–∏–π –≤–µ—Å: {data.get('weight', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')} –∫–≥\n"
            f"–ñ–µ–ª–∞–µ–º—ã–π –≤–µ—Å: {data.get('goal', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')} –∫–≥\n"
            f"–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: {data.get('restrictions', '–Ω–µ—Ç')}\n"
            f"–ß–∞—Å—Ç–æ—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {data.get('schedule', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"–£—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏: {data.get('level', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}"
        )

    def _with_name_prefix(self, text: str) -> str:
        """–í—Å–µ–≥–¥–∞ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –±–µ–∑ '–ø—Ä–∏–≤–µ—Ç'."""
        name = (self._user_name or "").strip()
        prefix = f"{name}, –æ–±—Ä–∞–±–æ—Ç–∞–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å ‚Äî –≤–æ—Ç —á—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å ‚¨áÔ∏è\n\n" if name else ""
        return prefix + text

    async def get_response(self, user_input: str) -> str:
        from asyncio import to_thread

        if user_input and user_input.strip():
            self.payload.messages.append(Messages(role=MessagesRole.USER, content=user_input))

        def _chat_sync():
            last_err = None
            for attempt in range(1, GIGACHAT_RETRIES + 1):
                try:
                    try:
                        with GigaChat(
                            credentials=self.token,
                            verify_ssl_certs=False,
                            timeout=GIGACHAT_TIMEOUT,
                            model=GIGACHAT_MODEL,
                        ) as giga:
                            response = giga.chat(self.payload)
                            return response.choices[0].message
                    except TypeError:
                        with GigaChat(
                            credentials=self.token,
                            verify_ssl_certs=False,
                            timeout=GIGACHAT_TIMEOUT,
                        ) as giga:
                            response = getattr(giga, "chat")(self.payload, model=GIGACHAT_MODEL)
                            return response.choices[0].message
                except Exception as e:
                    last_err = e
                    if attempt == GIGACHAT_RETRIES:
                        raise
                    time.sleep(2 * attempt)
            raise last_err or RuntimeError("GigaChat call failed")

        message = await to_thread(_chat_sync)
        self.payload.messages.append(message)

        cleaned = _strip_rpe(message.content)
        personalized = self._with_name_prefix(cleaned)

        history = self.user_data.get("history", [])
        if user_input and user_input.strip():
            history.append(("üßç " + user_input, "ü§ñ " + personalized))
        else:
            history.append(("üßç –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥—Ä–∞–º–º—ã", "ü§ñ " + personalized))
        self.user_data["history"] = history
        save_user_data(self.user_id, self.user_data)

        return personalized
