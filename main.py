import os
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
from app.storage import save_user_data, load_user_data
from bot.telegram_bot import handle_message, user_states  # user_states —Ç–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —è–≤–Ω–æ

load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

# –ö–Ω–æ–ø–∫–∏ —Ü–µ–ª–µ–π
keyboard = ReplyKeyboardMarkup(
    [["üèãÔ∏è‚Äç‚ôÇÔ∏è –ù–∞–±—Ä–∞—Ç—å –º–∞—Å—Å—É", "üèÉ‚Äç‚ôÇÔ∏è –ü–æ—Ö—É–¥–µ—Ç—å", "üßò –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ñ–æ—Ä–º—É"]],
    resize_keyboard=True,
    one_time_keyboard=True
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message:
        return  # –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã—Ö–æ–¥

    user_id = str(update.effective_user.id)

    # –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = load_user_data(user_id)
    user_data["physical_data_completed"] = False
    user_data["physical_data"] = {}
    user_data["history"] = []
    save_user_data(user_id, user_data)

    # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
    user_states.pop(user_id, None)

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–Ω–æ–ø–∫–∏ —Ü–µ–ª–∏
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç üí™\n\n–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ü–µ–ª—å:",
        reply_markup=keyboard
    )

def run_main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()

if __name__ == "__main__":
    run_main()
